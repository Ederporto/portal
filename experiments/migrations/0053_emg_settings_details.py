# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-30 14:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0052_tms_setting_details'),
    ]

    operations = [
        migrations.CreateModel(
            name='ADConverter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(max_length=150)),
                ('equipment_type', models.CharField(blank=True, choices=[('amplifier', 'Amplifier'), ('eeg_solution', 'EEG Solution'), ('filter', 'Filter'), ('eeg_electrode_net', 'EEG Electrode Net'), ('ad_converter', 'A/D Converter'), ('tms_device', 'TMS device')], max_length=50, null=True)),
                ('identification', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('signal_to_noise_rate', models.FloatField(blank=True, null=True)),
                ('sampling_rate', models.FloatField(blank=True, null=True)),
                ('resolution', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EMGADConverterSetting',
            fields=[
                ('emg_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_ad_converter_setting', serialize=False, to='experiments.EMGSetting')),
                ('sampling_rate', models.FloatField(blank=True, null=True)),
                ('ad_converter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.ADConverter')),
            ],
        ),
        migrations.CreateModel(
            name='EMGDigitalFilterSetting',
            fields=[
                ('emg_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_digital_filter_setting', serialize=False, to='experiments.EMGSetting')),
                ('filter_type_name', models.CharField(max_length=150)),
                ('filter_type_description', models.TextField(blank=True, null=True)),
                ('low_pass', models.FloatField(blank=True, null=True)),
                ('high_pass', models.FloatField(blank=True, null=True)),
                ('low_band_pass', models.FloatField(blank=True, null=True)),
                ('high_band_pass', models.FloatField(blank=True, null=True)),
                ('low_notch', models.FloatField(blank=True, null=True)),
                ('high_notch', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMGElectrodePlacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standardization_system_name', models.CharField(max_length=150)),
                ('standardization_system_description', models.TextField(blank=True, null=True)),
                ('muscle_anatomy_origin', models.TextField(blank=True, null=True)),
                ('muscle_anatomy_insertion', models.TextField(blank=True, null=True)),
                ('muscle_anatomy_function', models.TextField(blank=True, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('location', models.TextField(blank=True, null=True)),
                ('placement_type', models.CharField(choices=[('surface', 'Surface'), ('intramuscular', 'Intramuscular'), ('needle', 'Needle')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EMGElectrodeSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AlterField(
            model_name='intramuscularelectrode',
            name='insulation_material_name',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='needleelectrode',
            name='size_unit',
            field=models.CharField(blank=True, choices=[('mm', 'millimeter(s)'), ('cm', 'centimeter(s)')], max_length=10, null=True),
        ),
        migrations.CreateModel(
            name='EMGAmplifierSetting',
            fields=[
                ('emg_electrode_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_amplifier_setting', serialize=False, to='experiments.EMGElectrodeSetting')),
                ('gain', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMGElectrodePlacementSetting',
            fields=[
                ('emg_electrode_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_electrode_placement_setting', serialize=False, to='experiments.EMGElectrodeSetting')),
                ('muscle_side', models.CharField(max_length=150)),
                ('muscle_name', models.CharField(max_length=150)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMGIntramuscularPlacement',
            fields=[
                ('emgelectrodeplacement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.EMGElectrodePlacement')),
                ('method_of_insertion', models.TextField(blank=True, null=True)),
                ('depth_of_insertion', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.emgelectrodeplacement',),
        ),
        migrations.CreateModel(
            name='EMGNeedlePlacement',
            fields=[
                ('emgelectrodeplacement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.EMGElectrodePlacement')),
                ('depth_of_insertion', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.emgelectrodeplacement',),
        ),
        migrations.CreateModel(
            name='EMGPreamplifierSetting',
            fields=[
                ('emg_electrode_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_preamplifier_setting', serialize=False, to='experiments.EMGElectrodeSetting')),
                ('gain', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMGSurfacePlacement',
            fields=[
                ('emgelectrodeplacement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.EMGElectrodePlacement')),
                ('start_posture', models.TextField(blank=True, null=True)),
                ('orientation', models.TextField(blank=True, null=True)),
                ('fixation_on_the_skin', models.TextField(blank=True, null=True)),
                ('reference_electrode', models.TextField(blank=True, null=True)),
                ('clinical_test', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.emgelectrodeplacement',),
        ),
        migrations.AddField(
            model_name='emgelectrodesetting',
            name='electrode_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.ElectrodeModel'),
        ),
        migrations.AddField(
            model_name='emgelectrodesetting',
            name='emg_setting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emg_electrode_settings', to='experiments.EMGSetting'),
        ),
        migrations.CreateModel(
            name='EMGAnalogFilterSetting',
            fields=[
                ('emg_amplifier_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_analog_filter_setting', serialize=False, to='experiments.EMGAmplifierSetting')),
                ('low_pass', models.FloatField(blank=True, null=True)),
                ('high_pass', models.FloatField(blank=True, null=True)),
                ('low_band_pass', models.FloatField(blank=True, null=True)),
                ('low_notch', models.FloatField(blank=True, null=True)),
                ('high_band_pass', models.FloatField(blank=True, null=True)),
                ('high_notch', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EMGPreamplifierFilterSetting',
            fields=[
                ('emg_preamplifier_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='emg_preamplifier_filter_setting', serialize=False, to='experiments.EMGPreamplifierSetting')),
                ('low_pass', models.FloatField(blank=True, null=True)),
                ('high_pass', models.FloatField(blank=True, null=True)),
                ('low_band_pass', models.FloatField(blank=True, null=True)),
                ('low_notch', models.FloatField(blank=True, null=True)),
                ('high_band_pass', models.FloatField(blank=True, null=True)),
                ('high_notch', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='emgpreamplifiersetting',
            name='amplifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Amplifier'),
        ),
        migrations.AddField(
            model_name='emgelectrodeplacementsetting',
            name='emg_electrode_placement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.EMGElectrodePlacement'),
        ),
        migrations.AddField(
            model_name='emgamplifiersetting',
            name='amplifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Amplifier'),
        ),
    ]
