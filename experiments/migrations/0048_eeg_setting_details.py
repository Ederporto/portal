# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-02 14:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0047_new_steps'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amplifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(max_length=150)),
                ('equipment_type', models.CharField(blank=True, choices=[('amplifier', 'Amplifier'), ('eeg_solution', 'EEG Solution'), ('filter', 'Filter'), ('eeg_electrode_net', 'EEG Electrode Net'), ('ad_converter', 'A/D Converter'), ('tms_device', 'TMS device')], max_length=50, null=True)),
                ('identification', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('gain', models.FloatField(blank=True, null=True)),
                ('number_of_channels', models.IntegerField(blank=True, null=True)),
                ('common_mode_rejection_ratio', models.FloatField(blank=True, null=True)),
                ('input_impedance', models.FloatField(blank=True, null=True)),
                ('input_impedance_unit', models.CharField(blank=True, max_length=15, null=True)),
                ('amplifier_detection_type_name', models.CharField(blank=True, max_length=150, null=True)),
                ('tethering_system_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EEGAmplifierSetting',
            fields=[
                ('eeg_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='eeg_amplifier_setting', serialize=False, to='experiments.EEGSetting')),
                ('gain', models.FloatField(blank=True, null=True)),
                ('sampling_rate', models.FloatField(blank=True, null=True)),
                ('number_of_channels_used', models.IntegerField(null=True)),
                ('eeg_amplifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Amplifier')),
            ],
        ),
        migrations.CreateModel(
            name='EEGElectrodeLocalizationSystem',
            fields=[
                ('eeg_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='eeg_electrode_localization_system', serialize=False, to='experiments.EEGSetting')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('map_image_file', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='EEGElectrodeNet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(max_length=150)),
                ('equipment_type', models.CharField(blank=True, choices=[('amplifier', 'Amplifier'), ('eeg_solution', 'EEG Solution'), ('filter', 'Filter'), ('eeg_electrode_net', 'EEG Electrode Net'), ('ad_converter', 'A/D Converter'), ('tms_device', 'TMS device')], max_length=50, null=True)),
                ('identification', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EEGElectrodePosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('coordinate_x', models.IntegerField(blank=True, null=True)),
                ('coordinate_y', models.IntegerField(blank=True, null=True)),
                ('channel_default_index', models.IntegerField()),
                ('eeg_electrode_localization_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electrode_positions', to='experiments.EEGElectrodeLocalizationSystem')),
            ],
        ),
        migrations.CreateModel(
            name='EEGFilterSetting',
            fields=[
                ('eeg_setting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='eeg_filter_setting', serialize=False, to='experiments.EEGSetting')),
                ('eeg_filter_type_name', models.CharField(max_length=150)),
                ('eeg_filter_type_description', models.TextField(blank=True, null=True)),
                ('high_pass', models.FloatField(blank=True, null=True)),
                ('low_pass', models.FloatField(blank=True, null=True)),
                ('high_band_pass', models.FloatField(blank=True, null=True)),
                ('low_band_pass', models.FloatField(blank=True, null=True)),
                ('high_notch', models.FloatField(blank=True, null=True)),
                ('low_notch', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EEGSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(max_length=150)),
                ('name', models.CharField(max_length=150)),
                ('components', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElectrodeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=150, null=True)),
                ('usability', models.CharField(blank=True, choices=[('disposable', 'Disposable'), ('reusable', 'Reusable')], max_length=50, null=True)),
                ('impedance', models.FloatField(blank=True, null=True)),
                ('impedance_unit', models.CharField(blank=True, max_length=15, null=True)),
                ('inter_electrode_distance', models.FloatField(blank=True, null=True)),
                ('inter_electrode_distance_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('electrode_configuration_name', models.CharField(max_length=150)),
                ('electrode_type', models.CharField(choices=[('surface', 'Surface'), ('intramuscular', 'Intramuscular'), ('needle', 'Needle')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='IntramuscularElectrode',
            fields=[
                ('electrodemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.ElectrodeModel')),
                ('strand', models.CharField(choices=[('single', 'Single'), ('multi', 'Multi')], max_length=20)),
                ('insulation_material_name', models.CharField(max_length=150)),
                ('insulation_material_description', models.TextField(blank=True, null=True)),
                ('length_of_exposed_tip', models.FloatField(blank=True, null=True)),
            ],
            bases=('experiments.electrodemodel',),
        ),
        migrations.CreateModel(
            name='NeedleElectrode',
            fields=[
                ('electrodemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.ElectrodeModel')),
                ('size', models.FloatField(blank=True, null=True)),
                ('size_unit', models.CharField(choices=[('mm', 'millimeter(s)'), ('cm', 'centimeter(s)')], max_length=10)),
                ('number_of_conductive_contact_points_at_the_tip', models.IntegerField(blank=True, null=True)),
                ('size_of_conductive_contact_points_at_the_tip', models.FloatField(blank=True, null=True)),
            ],
            bases=('experiments.electrodemodel',),
        ),
        migrations.CreateModel(
            name='SurfaceElectrode',
            fields=[
                ('electrodemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.ElectrodeModel')),
                ('conduction_type', models.CharField(choices=[('gelled', 'Gelled'), ('dry', 'Dry')], max_length=20)),
                ('electrode_mode', models.CharField(choices=[('active', 'Active'), ('passive', 'Passive')], max_length=20)),
                ('electrode_shape_name', models.CharField(max_length=150)),
                ('electrode_shape_measure_value', models.FloatField()),
                ('electrode_shape_measure_unit', models.CharField(max_length=150)),
            ],
            bases=('experiments.electrodemodel',),
        ),
        migrations.AddField(
            model_name='eegelectrodeposition',
            name='electrode_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.ElectrodeModel'),
        ),
    ]
